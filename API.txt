Level 0
=======

Level 0.0
---------

odf_container container;

container = new_odf_container(odf_class);
container = new_odf_container(template);
                    
container = get_odf_container(url);

odf_container copy = container.clone();
str data = container.get_part(part_name);
container.set_part(part_name, data);
container.del_part(part_name);

TODO
~~~~

container.save();
container.save(packaging);
container.save(url);
container.save(url, packaging);

Level 0.1
---------

odf_xml_part part;

part = xml_part(part_name, container);

part.events;
part.container;
part.serialize();

list l_elt = part.get_element_list("xpath");

element elt = l_elt[0];

elt.get_element_list("xpath");

value = elt.get_attribute(name);
elt.set_attribute(name, value);

unicode text = elt.get_text();
elt.set_text(text);

element e2 = create_element('xml');
elt.insert_element(e2, {previous_sibling, next_sibling, ..., first_child,
    last_child}, <N>);
e3 = elt.copy();

elt.delete();

Level 1
=======

odf_document document;

- access an element by position
- access elements by attribute
- access an element by attribute then position

get_paragraph_list(context, style=None)
=> '//text:p[@text:style-name="%s"]' % style

get_heading_list(context, style=None, level=None)
assert level >= 1
=> '//text:h[@text:style-name="%s"]' % style
=> '//text:h[@text:level="%s"]' % level

get_paragraph(context, position)
=> '//text:p[%s]' % position

get_heading(context, position, level=None)
=> '//text:h[@text:level="%s"][%s]' % (level, position)

style type: font face, default style...
style family: font family, text, paragraph, graphics, number...
style parent (inheritance)
[style class: ... ?]

get_style(name, [...])

Simple case: search a paragraph style (family=paragraph):

  => same part, automatic styles
  => same part, named styles
  => styles part, named styles
  => default style of the same family

create_paragraph(text='', style)

  <text:p text:style-name="$style">$text</text:p>

create_heading(text='', style, level)

  <text:h text:style-name="$style" text:level="$level">$text</text:h>

document.insert_paragraph(context, text='', style)

document.insert_heading(context, text='', style, level)

(Preload the body, etc. for fast access to default contexts)

TODO
====

list items, tables, table cells...

named styles, automatic styles
style families: 

manifest?

XPath Requirements
==================

//text:p[4]
//toto[4]/text:p[5]
//toto[@attr=value]
//toto[@attr=value]/titi[4]
//text:p[@text:style-name="Note"][4]
