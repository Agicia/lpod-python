.. Copyright (c) 2009 Ars Aperta, Itaapy, Pierlis, Talend.

   Authors: David Versmisse <david.versmisse@itaapy.com>
            Hervé Cauwelier <herve@itaapy.com>
            Jean-Marie Gouarné <jean-marie.gouarne@arsaperta.com>
            Luis Belmar-Letelier <luis@itaapy.com>

   This file is part of Lpod (see: http://lpod-project.org).
   Lpod is free software; you can redistribute it and/or modify it under
   the terms of either:

   a) the GNU General Public License as published by the Free Software
      Foundation, either version 3 of the License, or (at your option)
      any later version.
      Lpod is distributed in the hope that it will be useful,
      but WITHOUT ANY WARRANTY; without even the implied warranty of
      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
      GNU General Public License for more details.
      You should have received a copy of the GNU General Public License
      along with Lpod.  If not, see <http://www.gnu.org/licenses/>.

   b) the Apache License, Version 2.0 (the "License");
      you may not use this file except in compliance with the License.
      You may obtain a copy of the License at
      http://www.apache.org/licenses/LICENSE-2.0

Introduction
==============

lpOD -- languages & platforms OpenDocument.
Definition of a Free Software API implementing the ISO/IEC 26300 standard.
Development, for higher level use cases, in Python, Perl and Ruby languages.
of a top-down oriented API.

lpOD is design according **top-down** approche, the code follows the document
semantics instad of the XML shemat [1]_. So from the programer viewpoint there is
no need to know the ODF specification, lpOD insolate him from the low level XML
concerns.

This documentation describe the **fonctionnal architecture**, we define the
:doc:`Level 0 <level0>` as the encapsulation of all the low-level data access logic
(Packaging , Encoding and XML network). The :doc:`Level 1 <level1-introduction>` offers a
document-oriented API who hides the physical data model and reflects a typical
user's view and navigation on the document.

As a direct demonstration of the API we provide a :doc:`CookBook </cookbook>` and a set of
:doc:`command line tools </cmd-line-tools>` to manipulate ODS, ODI and ODT Data.


*Jean-Marie Gouarné [2], lpOD Architec.*


.. [1] At the opposit of implementations that start by a code generation from ODF RelaxNG shemat.
.. [2] Jean-Marie Gouarné is the author of OODoc Perl toolkit which got an "OpenOffice.org Community Innovation Program award"


lpOD Cookbook
=============

.. toctree::
   :maxdepth: 3

   cookbook.rst


lpod-cmd-line usefull tools
==============================

.. toctree::
   :maxdepth: 2

   cmd-line-tools.rst


lpOD Architecture level 0
===========================

.. toctree::
   :maxdepth: 3

   level0.rst


lpOD Architecture level 1
===========================

.. toctree::
   :maxdepth: 2

   level1-introduction.rst
   level1-basic-text-containers.rst
   level1-text-marks-and-indices.rst
   level1-tables-of-content.rst
   level1-notes.rst
   level1-table.rst
   level1-structured-containers.rst
..   level1-fields-and-forms.rst
   level1-graphic-content.rst
..   level1-metadata.rst
   level1-styles.rst
..   level1-application-settings.rst

Autogenerated code documentation
==================================

.. toctree::
   :maxdepth: 2

   autodocs.rst
